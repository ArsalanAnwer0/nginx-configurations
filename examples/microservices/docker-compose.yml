version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - user-service
      - order-service
      - payment-service

  user-service:
    image: node:16-alpine
    ports:
      - "3001:3001"
    working_dir: /app
    command: >
      sh -c "echo 'const express = require(\"express\"); 
             const app = express(); 
             app.use(express.json());
             app.get(\"/health\", (req, res) => res.json({status: \"ok\", service: \"user\"})); 
             app.get(\"/api/users\", (req, res) => res.json({users: [{id: 1, name: \"John\"}, {id: 2, name: \"Jane\"}]})); 
             app.post(\"/api/auth\", (req, res) => res.json({token: \"fake-jwt-token\"}));
             app.listen(3001, \"0.0.0.0\", () => console.log(\"User service on 3001\"));' > server.js &&
             npm init -y &&
             npm install express &&
             node server.js"

  order-service:
    image: node:16-alpine
    ports:
      - "3002:3002"
    working_dir: /app
    command: >
      sh -c "echo 'const express = require(\"express\"); 
             const app = express(); 
             app.use(express.json());
             app.get(\"/health\", (req, res) => res.json({status: \"ok\", service: \"order\"})); 
             app.get(\"/api/orders\", (req, res) => res.json({orders: [{id: 1, item: \"Laptop\", price: 999}, {id: 2, item: \"Phone\", price: 599}]})); 
             app.listen(3002, \"0.0.0.0\", () => console.log(\"Order service on 3002\"));' > server.js &&
             npm init -y &&
             npm install express &&
             node server.js"

  payment-service:
    image: node:16-alpine
    ports:
      - "3003:3003"
    working_dir: /app
    command: >
      sh -c "echo 'const express = require(\"express\"); 
             const app = express(); 
             app.use(express.json());
             app.get(\"/health\", (req, res) => res.json({status: \"ok\", service: \"payment\"})); 
             app.get(\"/api/payments\", (req, res) => res.json({payments: [{id: 1, amount: 999, status: \"completed\"}, {id: 2, amount: 599, status: \"pending\"}]})); 
             app.listen(3003, \"0.0.0.0\", () => console.log(\"Payment service on 3003\"));' > server.js &&
             npm init -y &&
             npm install express &&
             node server.js"
